{"oldreact": {"help": "```If we cannot find the same word of \u5c0f\u7bc6, it will be ignore\n  The emoji can only be reacted once a message\n  If floor <0 , means previous message\n  floor = 0  means yourself\n  floor > 0 means to future messages , [floor] below yourself\n  And the range of floor is [-F,F] . If this command is accped , the bot will react \"\u884c\" which means OK in chinese \n  For example:\n  `oldreact \u8868\u60c5OAO`\n  `oldreact :_e8_a1_a8::_e6_83_85:\u597d\u7b11OAO`\n  `oldreact -1 \u6a13\u4e0a`\n  `oldreact a \u5341\u6a13`\n\n  In advance, it was designed for recursive usage\n  For example:\n  `old oldreact old \u905e\u8ff4!````", "usage": "`oldreact (floor=-1) [text]` **give reactions of \u5c0f\u7bc6emoji to specific floor message**"}, "oldset": {"help": "```The newName should obey the rule of emoji name on Slack\n  A word should be a word can be found in \u5c0f\u7bc6\n  If some error happened , it will output error message\n  For example:\n  `oldset \u5403 eat````", "usage": "`oldset [aWord] [newName]` **set alias for \u5c0f\u7bc6emoji**"}, "oldhelp": {"help": "```for example: oldhelp old oldask\n  If you want to see more clear statement see [OLDhelp.md]```", "usage": "`oldhelp` **get help for the usage of this modle or the function**"}, "oldtime": {"help": "```if time is not specific , it will output now time\n  if your time format is wrong , it will not output anything\n  there are several format for time\n\t`2016/1/2 3:4` `2016/1/2 3:` `2016/1/2` `2016` `3:4` `3:` `:4`\n  For example:\n  `oldtime`\n  `oldtime 2014/1/12 3:````", "usage": "`oldtime (time)` **show the date and time by \u5c0f\u7bc6emoji**"}, "purpose": "\nThis module is to transform Chinese word to \u5c0f\u7bc6 and store as emoji on Slack\nAuthor : linnil1\nSource : https://github.com/linnil1/slack_emoji_bot\nThere are 6 operations : [\"old\",\"oldask\",\"oldreact\",\"oldset\",\"oldhelp\",\"oldtime\"]\nYou can see detail of operation by oldhelp (func...)\n\t", "old": {"help": "```If we cannot find the same word of \u5c0f\u7bc6, it will output the same as you type.\n  For example:\n  `old \u5c0f\u7bc6\u6e2c\u8a66 ^_^`\n  `old \u9019\u500b\u5b57 two of them cannot be found`\n\n  In advance, it was designed for recursive usage\n  For example:\n  `old old \u4f60\u597d!````", "usage": "`old [text]` **transfer text to \u5c0f\u7bc6emoji.**"}, "allfunc": ["old", "oldask", "oldreact", "oldset", "oldhelp", "oldtime"], "oldask": {"help": "```The form of emoji name is \"_ab_cd_ef\" (abcdef is hex)\n  And 6characters is the emoji name without \"_\"\n  In python, 6characters should be same as `urllib.parse.quote(\"\u5b57\").replace(\"_\",\"\")`\n  If we cannot find the word, it doesn't ouput anything\n  For example: \u9ed1 is _e9_bb_91 and the 6characters is \"e9bb91\"\n  `oldask e9bb91````", "usage": "`oldask [6characters]` **ask what is the emoji character**"}}